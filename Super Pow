########### Problem Statement #########
372. Super Pow
Solved
Medium
Topics
premium lock icon
Companies
Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.

 

Example 1:

Input: a = 2, b = [3]
Output: 8
Example 2:

Input: a = 2, b = [1,0]
Output: 1024
Example 3:

Input: a = 1, b = [4,3,3,8,5,2]
Output: 1
 

Constraints:

1 <= a <= 231 - 1
1 <= b.length <= 2000
0 <= b[i] <= 9
b does not contain leading zeros.

############## Solution ###############
/**
 * @param {number} a
 * @param {number[]} b
 * @return {number}
 */
/**
 * @param {number} a
 * @param {number[]} b
 * @return {number}
 */
var superPow = function(a, b) {
    // Helper function: a^k % 1337
    const modPow = (a, k) => {
        a %= 1337;
        let result = 1;
        for (let i = 0; i < k; i++) {
            result = (result * a) % 1337;
        }
        return result;
    };

    if (b.length === 0) return 1;

    let lastDigit = b.pop();
    let part1 = modPow(a, lastDigit);
    let part2 = modPow(superPow(a, b), 10);

    return (part1 * part2) % 1337;
};

#########################################
