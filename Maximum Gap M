############### Problem Statement #########
164. Maximum Gap
Solved
Medium
Topics
Companies
Given an integer array nums, return the maximum difference between two successive elements in its sorted form. If the array contains less than two elements, return 0.

You must write an algorithm that runs in linear time and uses linear extra space.

 

Example 1:

Input: nums = [3,6,9,1]
Output: 3
Explanation: The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3.
Example 2:

Input: nums = [10]
Output: 0
Explanation: The array contains less than 2 elements, therefore return 0.
 

Constraints:

1 <= nums.length <= 105
0 <= nums[i] <= 109

########### solution ##############
/**
 * @param {number[]} nums
 * @return {number}
 */
var maximumGap = function(nums) {
    if (nums.length < 2) return 0;

    let minNum = Math.min(...nums);
    let maxNum = Math.max(...nums);
    if (minNum === maxNum) return 0; // all elements are same

    let n = nums.length;
    let bucketSize = Math.max(1, Math.floor((maxNum - minNum) / (n - 1)));
    let bucketCount = Math.floor((maxNum - minNum) / bucketSize) + 1;

    let buckets = new Array(bucketCount).fill(null).map(() => ({
        min: Infinity,
        max: -Infinity
    }));

    for (let num of nums) {
        let idx = Math.floor((num - minNum) / bucketSize);
        buckets[idx].min = Math.min(buckets[idx].min, num);
        buckets[idx].max = Math.max(buckets[idx].max, num);
    }

    let maxGap = 0;
    let previousMax = minNum;

    for (let bucket of buckets) {
        if (bucket.min === Infinity) continue; // empty bucket
        maxGap = Math.max(maxGap, bucket.min - previousMax);
        previousMax = bucket.max;
    }

    return maxGap;
};


##############################
