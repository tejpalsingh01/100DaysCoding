########## Problem Statement #############
Climbing Stairs
You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step

###########Solution###########

class Solution {
    public int climbStairs(int n) {
        //Handle base class
        if(n==1) return 1;
        if(n==2) return 2;

        //use two variable to track the number ways of last two steps
        int first = 1;
        int second  = 2;

        //start from step 3 to n 
        for(int i = 3;i<=n;i++){
            int temp  = first +second;//
            first  = second ;
            second  = temp;

        }
        return second; // Return the number of ways 
    }
}

######################################
