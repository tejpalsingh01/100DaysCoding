################# Problem Statement ##########
Multiply Strings

Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.

Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.

 

Example 1:

Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:

Input: num1 = "123", num2 = "456"
Output: "56088"
 

Constraints:

1 <= num1.length, num2.length <= 200
num1 and num2 consist of digits only.
Both num1 and num2 do not contain any leading zero, except the number 0 itself.

##################### Solution ##############
/**
 * @param {string} num1
 * @param {string} num2
 * @return {string}
 */
var multiply = function(num1, num2) {
   if(num1 == "0" || num2 == "0") return "0"; //Edge case: Multiplication with zero

   let m = num1.length, n = num2.length;
   let result  = new Array(m+n).fill(0);

   //Perform multiplication
   for(let i=m-1; i>=0;i--){
    for(let j = n-1; j>=0;j--){
        let mul = (num1[i]-'0') * (num2[j] - '0') // convert char to int and multiply
        let sum  = mul + result[i+j+1];

        result[i+j+1] = sum %10; //store unit place
        result[i+j] += Math.floor(sum/10); //carry over

    }

   }

   // Convert result array to string 
   let resStr  = result.join("").replace(/^0+/,''); // Rmove leading zeros
   return resStr.length ? resStr : "0";
};

##################################
